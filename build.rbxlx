<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Workspace" referent="107">
		<Properties>
			<bool name="AllowThirdPartySales">false</bool>
			<token name="AnimationWeightedBlendFix">0</token>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<token name="ClientAnimatorThrottling">0</token>
			<string name="CollisionGroups">Default^0^-1</string>
			<Ref name="CurrentCamera">RBXD90768E7844341EAA1ED1E13AB27A794</Ref>
			<double name="DistributedGameTime">0</double>
			<bool name="ExplicitAutoJoints">true</bool>
			<float name="FallenPartsDestroyHeight">-500</float>
			<Vector3 name="GlobalWind">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<float name="Gravity">196.199997</float>
			<token name="HumanoidOnlySetCollisionsOnStateChange">0</token>
			<token name="InterpolationThrottling">0</token>
			<token name="LevelOfDetail">0</token>
			<token name="MeshPartHeadsAndAccessories">0</token>
			<CoordinateFrame name="ModelMeshCFrame">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
			<Vector3 name="ModelMeshSize">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<string name="Name">Workspace</string>
			<bool name="NeedsPivotMigration">false</bool>
			<token name="PhysicsInertiaAndVolumeFix">0</token>
			<token name="PhysicsSteppingMethod">0</token>
			<Ref name="PrimaryPart">null</Ref>
			<token name="ReplicateInstanceDestroySetting">0</token>
			<token name="Retargeting">0</token>
			<token name="SignalBehavior">0</token>
			<int64 name="SourceAssetId">-1</int64>
			<token name="StreamOutBehavior">0</token>
			<bool name="StreamingEnabled">false</bool>
			<int name="StreamingMinRadius">64</int>
			<token name="StreamingPauseMode">0</token>
			<int name="StreamingTargetRadius">1024</int>
			<BinaryString name="Tags"></BinaryString>
			<bool name="TerrainWeldsFixed">true</bool>
			<bool name="TouchesUseCollisionGroups">false</bool>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001da3b</UniqueId>
			<OptionalCoordinateFrame name="WorldPivotData">
				<CFrame>
					<X>0</X>
					<Y>-10</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CFrame>
			</OptionalCoordinateFrame>
		</Properties>
		<Item class="Camera" referent="RBXD90768E7844341EAA1ED1E13AB27A794">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<CoordinateFrame name="CFrame">
					<X>-57.468235</X>
					<Y>32.6228638</Y>
					<Z>91.5887833</Z>
					<R00>0.961266756</R00>
					<R01>0.0849896818</R01>
					<R02>-0.262188941</R02>
					<R10>-0</R10>
					<R11>0.951270342</R11>
					<R12>0.308358371</R12>
					<R20>0.275619835</R20>
					<R21>-0.296414644</R21>
					<R22>0.914424479</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<float name="FieldOfView">70</float>
				<token name="FieldOfViewMode">0</token>
				<CoordinateFrame name="Focus">
					<X>-56.9438591</X>
					<Y>32.0061493</Y>
					<Z>89.7599411</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<string name="Name">Camera</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f4dc</UniqueId>
			</Properties>
		</Item>
		<Item class="Part" referent="108">
			<Properties>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>-10</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4284636770</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">Baseplate</string>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f4dd</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>512</X>
					<Y>20</Y>
					<Z>512</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Terrain" referent="RBX1375E3160A414EFAA13361CF1987D3E8">
			<Properties>
				<token name="AcquisitionMethod">0</token>
				<bool name="Anchored">true</bool>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="CanQuery">true</bool>
				<bool name="CanTouch">true</bool>
				<bool name="CastShadow">true</bool>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<bool name="Decoration">false</bool>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<bool name="Massless">false</bool>
				<token name="Material">256</token>
				<BinaryString name="MaterialColors"><![CDATA[AAAAAAAAan8/P39rf2Y/ilY+j35fi21PZmxvZbDqw8faiVpHOi4kHh4lZlw76JxKc3trhHta
gcLgc4RKxr21zq2UlJSM]]></BinaryString>
				<string name="MaterialVariantSerialized"></string>
				<string name="Name">Terrain</string>
				<BinaryString name="PhysicsGrid">AgMAAAAAAAAAAAAAAAA=</BinaryString>
				<CoordinateFrame name="PivotOffset">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<int name="RootPriority">0</int>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<BinaryString name="SmoothGrid">AQU=</BinaryString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f4de</UniqueId>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Color3 name="WaterColor">
					<R>0.0500000007</R>
					<G>0.330000013</G>
					<B>0.360000014</B>
				</Color3>
				<float name="WaterReflectance">1</float>
				<float name="WaterTransparency">0.300000012</float>
				<float name="WaterWaveSize">0.150000006</float>
				<float name="WaterWaveSpeed">10</float>
				<Vector3 name="size">
					<X>2044</X>
					<Y>252</Y>
					<Z>2044</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBX57592FCD038F4E0FA225D9564F544961">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">ModuleScript</string>
				<string name="ScriptGuid">{637D277F-8997-4A2D-ADAA-7FE8D2C5DBC1}</string>
				<ProtectedString name="Source"><![CDATA[local libraryList = {
	"bit32", "coroutine", "debug", "math", "os", "string", "table", "task", "utf8",

	--"Axes",
	--"BrickColor",
	--"CFrame",
	--"CatalogSearchParams",
	--"Color3",
	--"ColorSequence",
	--"ColorSequenceKeypoint",
	--"DateTime",
	--"DockWidgetPluginGuiInfo",
	--"Faces",
	--"FloatCurveKey",
	--"Instance",
	--"NumberRange",
	--"NumberSequence",
	--"NumberSequenceKeypoint",
	--"OverlapParams",
	--"PathWaypoint",
	--"PhysicalProperties",
	--"Random",
	--"Ray",
	--"RaycastParams",
	--"Rect",
	--"Region3",
	--"Region3int16",
	--"TweenInfo",
	--"UDim",
	--"UDim2",
	--"Vector2",
	--"Vector2int16",
	--"Vector3",
	--"Vector3int16",
}


local LIBRARY_FORMAT_STRING = [[%s\\.(?:%s)]]
local SCOPE_FORMAT_STRING = [[\\b(%s)\\b]]

local constantsList = {}
local namesList = {}

for _, libraryName in ipairs(libraryList) do
	local library = loadstring("return "..libraryName)()
	if not library then
		print(libraryName)
		return
	end

	local names = {}
	local consts = { libraryName }

	for name, thing in pairs(library) do
		if type(thing) == "function" then
			names[#names + 1] = name
		else
			consts[#consts + 1] = string.format([[%s\\.%s]], libraryName, name)
		end
	end

	table.sort(names)
	table.sort(consts)	

	constantsList[#constantsList + 1] = table.concat(consts, "|")
	namesList[#namesList + 1] = string.format(LIBRARY_FORMAT_STRING, libraryName, table.concat(names, "|"))
end

local namesScript = Instance.new("ModuleScript")
namesScript.Name = "NAMES_LIST"
namesScript.Source = string.format(SCOPE_FORMAT_STRING, table.concat(namesList, "|"))
--namesScript.Parent = workspace

local constScript = Instance.new("ModuleScript")
constScript.Name = "CONST_LIST"
constScript.Source = string.format(SCOPE_FORMAT_STRING, table.concat(constantsList, "|"))
--constScript.Parent = workspace

local plugin = PluginManager():CreatePlugin()
plugin:OpenScript(namesScript)
plugin:OpenScript(constScript)

return nil]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec01497ada</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="SoundService" referent="102">
		<Properties>
			<token name="AmbientReverb">0</token>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<float name="DistanceFactor">3.32999992</float>
			<float name="DopplerScale">1</float>
			<string name="Name">SoundService</string>
			<bool name="RespectFilteringEnabled">true</bool>
			<float name="RolloffScale">1</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f42c</UniqueId>
		</Properties>
	</Item>
	<Item class="NonReplicatedCSGDictionaryService" referent="RBX9B49A10445E44F8DA07674BBB75142C5">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">NonReplicatedCSGDictionaryService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f438</UniqueId>
		</Properties>
	</Item>
	<Item class="CSGDictionaryService" referent="RBXB80E8FE6CB45484BA8969AD1B75DF026">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">CSGDictionaryService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f439</UniqueId>
		</Properties>
	</Item>
	<Item class="Chat" referent="RBX19AA3827406047D0B596197A703E253E">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="BubbleChatEnabled">false</bool>
			<bool name="LoadDefaultChat">true</bool>
			<string name="Name">Chat</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f43e</UniqueId>
		</Properties>
	</Item>
	<Item class="TimerService" referent="RBXA8A92B7A49B2420F9ABDE60C67E97A6A">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f43f</UniqueId>
		</Properties>
	</Item>
	<Item class="Players" referent="2">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="CharacterAutoLoads">false</bool>
			<int name="MaxPlayersInternal">12</int>
			<string name="Name">Players</string>
			<int name="PreferredPlayersInternal">0</int>
			<float name="RespawnTime">5</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f441</UniqueId>
		</Properties>
	</Item>
	<Item class="ReplicatedFirst" referent="RBXB2D1F3152D2B45DBA5A4DC7CA8BDDCDC">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">ReplicatedFirst</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f445</UniqueId>
		</Properties>
	</Item>
	<Item class="TweenService" referent="RBX68F754DAD1744D2B8794132680774FA0">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">TweenService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f447</UniqueId>
		</Properties>
	</Item>
	<Item class="MaterialService" referent="RBX7B5A492E20354E28B748A3A8D41A138C">
		<Properties>
			<string name="AsphaltName">Asphalt</string>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="BasaltName">Basalt</string>
			<string name="BrickName">Brick</string>
			<string name="CobblestoneName">Cobblestone</string>
			<string name="ConcreteName">Concrete</string>
			<string name="CorrodedMetalName">CorrodedMetal</string>
			<string name="CrackedLavaName">CrackedLava</string>
			<string name="DiamondPlateName">DiamondPlate</string>
			<string name="FabricName">Fabric</string>
			<string name="FoilName">Foil</string>
			<string name="GlacierName">Glacier</string>
			<string name="GraniteName">Granite</string>
			<string name="GrassName">Grass</string>
			<string name="GroundName">Ground</string>
			<string name="IceName">Ice</string>
			<string name="LeafyGrassName">LeafyGrass</string>
			<string name="LimestoneName">Limestone</string>
			<string name="MarbleName">Marble</string>
			<string name="MetalName">Metal</string>
			<string name="MudName">Mud</string>
			<string name="Name">MaterialService</string>
			<string name="PavementName">Pavement</string>
			<string name="PebbleName">Pebble</string>
			<string name="PlasticName">Plastic</string>
			<string name="RockName">Rock</string>
			<string name="SaltName">Salt</string>
			<string name="SandName">Sand</string>
			<string name="SandstoneName">Sandstone</string>
			<string name="SlateName">Slate</string>
			<string name="SmoothPlasticName">SmoothPlastic</string>
			<string name="SnowName">Snow</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f448</UniqueId>
			<bool name="Use2022MaterialsXml">false</bool>
			<string name="WoodName">Wood</string>
			<string name="WoodPlanksName">WoodPlanks</string>
		</Properties>
	</Item>
	<Item class="PermissionsService" referent="RBX51DAB789912943A59484AACB26F4E089">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">PermissionsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f44c</UniqueId>
		</Properties>
	</Item>
	<Item class="PlayerEmulatorService" referent="RBX257F1920DA874E5AB7D1A7FA7376D397">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="CustomPoliciesEnabled">false</bool>
			<string name="EmulatedCountryCode"></string>
			<string name="EmulatedGameLocale"></string>
			<string name="Name">PlayerEmulatorService</string>
			<bool name="PlayerEmulationEnabled">false</bool>
			<BinaryString name="SerializedEmulatedPolicyInfo"></BinaryString>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f44e</UniqueId>
		</Properties>
	</Item>
	<Item class="StudioData" referent="RBXFE9628A25AAE4B5995E7199048C2D08D">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<int64 name="CommitInflightAuthorId">0</int64>
			<string name="CommitInflightGuid"></string>
			<int name="CommitInflightPlaceVersion">0</int>
			<bool name="EnableScriptCollabByDefaultOnLoad">false</bool>
			<string name="Name">StudioData</string>
			<int64 name="SourceAssetId">-1</int64>
			<int64 name="SrcPlaceId">0</int64>
			<int64 name="SrcUniverseId">0</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f451</UniqueId>
		</Properties>
	</Item>
	<Item class="StarterPlayer" referent="103">
		<Properties>
			<bool name="AllowCustomAnimations">true</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutoJumpEnabled">true</bool>
			<float name="CameraMaxZoomDistance">400</float>
			<float name="CameraMinZoomDistance">0.5</float>
			<token name="CameraMode">0</token>
			<float name="CharacterJumpHeight">7.19999981</float>
			<float name="CharacterJumpPower">50</float>
			<float name="CharacterMaxSlopeAngle">89</float>
			<bool name="CharacterUseJumpPower">true</bool>
			<float name="CharacterWalkSpeed">16</float>
			<token name="DevCameraOcclusionMode">0</token>
			<token name="DevComputerCameraMovementMode">0</token>
			<token name="DevComputerMovementMode">0</token>
			<token name="DevTouchCameraMovementMode">0</token>
			<token name="DevTouchMovementMode">0</token>
			<bool name="EnableMouseLockOption">true</bool>
			<int64 name="GameSettingsAssetIDFace">0</int64>
			<int64 name="GameSettingsAssetIDHead">0</int64>
			<int64 name="GameSettingsAssetIDLeftArm">0</int64>
			<int64 name="GameSettingsAssetIDLeftLeg">0</int64>
			<int64 name="GameSettingsAssetIDPants">0</int64>
			<int64 name="GameSettingsAssetIDRightArm">0</int64>
			<int64 name="GameSettingsAssetIDRightLeg">0</int64>
			<int64 name="GameSettingsAssetIDShirt">0</int64>
			<int64 name="GameSettingsAssetIDTeeShirt">0</int64>
			<int64 name="GameSettingsAssetIDTorso">0</int64>
			<token name="GameSettingsAvatar">1</token>
			<token name="GameSettingsR15Collision">0</token>
			<NumberRange name="GameSettingsScaleRangeBodyType">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHead">0.95 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeHeight">0.9 1.05 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeProportion">0 1 </NumberRange>
			<NumberRange name="GameSettingsScaleRangeWidth">0.7 1 </NumberRange>
			<float name="HealthDisplayDistance">100</float>
			<bool name="LoadCharacterAppearance">true</bool>
			<token name="LoadCharacterLayeredClothing">0</token>
			<string name="Name">StarterPlayer</string>
			<float name="NameDisplayDistance">100</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f452</UniqueId>
			<bool name="UserEmotesEnabled">true</bool>
		</Properties>
		<Item class="StarterPlayerScripts" referent="104">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">StarterPlayerScripts</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f4df</UniqueId>
			</Properties>
			<Item class="LocalScript" referent="105">
				<Properties>
					<BinaryString name="AttributesSerialize">AQAAAAkAAABEZWJ1Z01vZGUDAA==</BinaryString>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Client</string>
					<string name="ScriptGuid">{FE1CCF24-8296-4DE7-BE5B-DAF8CC60E1A4}</string>
					<ProtectedString name="Source"><![CDATA[local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ContentProvider = game:GetService("ContentProvider")

local player = Players.LocalPlayer
local playerGui = player.PlayerGui

local load = require(ReplicatedStorage.DepLoader)
local Roact = load("Roact")
local ImageAssets = load("ImageAssets")

local debugMode = script:GetAttribute("DebugMode")
if debugMode then
	local testAssets = require(script.TestAssets)
	local testElement = Roact.createElement(testAssets)
	local hostElement = Roact.createElement("ScreenGui", nil, {
		Contents = testElement,
	})
	Roact.mount(hostElement, playerGui)
	return
end

local Minesweeper = require(ReplicatedStorage.Minesweeper) -- ./src

local assets = {}
for _, namespace in ImageAssets do
	for _, assetId in namespace do
		table.insert(assets, assetId)
	end
end

local loadingScreen = Roact.createElement("ScreenGui", nil, {
	LoadingLabel = Roact.createElement("TextLabel", {
		Size = UDim2.new(1, 0, 1, 0),
		BackgroundTransparency = 0.25,

		TextScaled = true,
		Text = "Loading...",
	}),
})

local loadingTree = Roact.mount(loadingScreen, playerGui)

ContentProvider:PreloadAsync(assets)

Roact.unmount(loadingTree)

local presets = {
	easy = { size = Vector2.new(9, 9), mineCount = 10 },
	medium = { size = Vector2.new(16, 16), mineCount = 40 },
	hard = { size = Vector2.new(30, 16), mineCount = 99 },
	extreme = { size = Vector2.new(30, 24), mineCount = 180 },
}

local gameElement = Roact.createElement(Minesweeper, presets.easy)

local hostElement = Roact.createElement("ScreenGui", nil, {
	ParentFrame = Roact.createElement("Frame", {
		Size = UDim2.new(1, 0, 1, 0),
		Position = UDim2.new(0.5, 0, 0.5, 0),
		AnchorPoint = Vector2.new(0.5, 0.5),
		BackgroundColor3 = Color3.fromRGB(160, 160, 160),
	}, {
		Minesweeper = gameElement,
	}),
})

Roact.mount(hostElement, playerGui)
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f4e0</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="106">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">TestAssets</string>
						<string name="ScriptGuid">{37DD318D-0B53-4A14-82E4-962A6BD43B72}</string>
						<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage")

local load = require(ReplicatedStorage.DepLoader)
local ImageAssets = load("ImageAssets")
local Roact = load("Roact")

local function Container(props)
	local children = {}

	children.UIGridLayout = Roact.createElement("UIGridLayout", {
		CellSize = UDim2.fromOffset(50, 50),
	})

	for k, assetId in props.images do
		children[k] = Roact.createElement("ImageLabel", {
			Image = assetId,
		})
	end

	return Roact.createElement("Frame", {
		Size = UDim2.new(1 / 3, 0, 1, 0),
	}, children)
end

local function TestAssets()
	local children = {}

	children.UIListLayout = Roact.createElement("UIListLayout", {
		FillDirection = Enum.FillDirection.Horizontal,
	})
	for k, namespace in ImageAssets do
		children[k] = Roact.createElement(Container, {
			images = namespace,
		})
	end

	return Roact.createElement("Frame", {
		Size = UDim2.new(1, 0, 1, 0),
	}, children)
end

return TestAssets
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f4e1</UniqueId>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="StarterCharacterScripts" referent="RBX1387607BB1A74BBEA6D4A361D910BCAE">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">StarterCharacterScripts</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f4e2</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="StarterPack" referent="RBXB6260F66C5F047E89C0C96FD398B5ADB">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">StarterPack</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f453</UniqueId>
		</Properties>
	</Item>
	<Item class="StarterGui" referent="RBX63ACAE467B1D4532B1DE1213649417ED">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">StarterGui</string>
			<bool name="ResetPlayerGuiOnSpawn">true</bool>
			<token name="ScreenOrientation">2</token>
			<bool name="ShowDevelopmentGui">true</bool>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f454</UniqueId>
			<token name="VirtualCursorMode">0</token>
		</Properties>
	</Item>
	<Item class="LocalizationService" referent="RBXB3C8A5F179004CA78AA106348DCEE4FB">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">LocalizationService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f456</UniqueId>
		</Properties>
	</Item>
	<Item class="TeleportService" referent="RBXABFCC32B4C9B4EC093F588D51A9ABB85">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Teleport Service</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f45a</UniqueId>
		</Properties>
	</Item>
	<Item class="CollectionService" referent="RBX3C308A21B8C34B35A9282ADF994D764A">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">CollectionService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f45c</UniqueId>
		</Properties>
	</Item>
	<Item class="PhysicsService" referent="RBX466F16E5205C40ADB336C652C17CD2FB">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">PhysicsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f45d</UniqueId>
		</Properties>
	</Item>
	<Item class="Geometry" referent="RBXDA2AAB71D4FE4FAB89A861754BD1B6C3">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Geometry</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f45f</UniqueId>
		</Properties>
	</Item>
	<Item class="InsertService" referent="RBXDBC9109336CE496AA9B5276D9F8991B2">
		<Properties>
			<bool name="AllowClientInsertModels">false</bool>
			<bool name="AllowInsertFreeModels">false</bool>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">InsertService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f461</UniqueId>
		</Properties>
		<Item class="StringValue" referent="RBX87375338145A49C2AC4A7D63562D5565">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">InsertionHash</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f4e3</UniqueId>
				<string name="Value">{33B13510-3E52-409B-A574-2A5173DC9839}</string>
			</Properties>
		</Item>
	</Item>
	<Item class="GamePassService" referent="RBXC504D231402742DDA3463D3D266E6B00">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">GamePassService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f462</UniqueId>
		</Properties>
	</Item>
	<Item class="Debris" referent="RBX27AF67346BC045D8998759DE73DF798B">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<int name="MaxItems">1000</int>
			<string name="Name">Debris</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f463</UniqueId>
		</Properties>
	</Item>
	<Item class="CookiesService" referent="RBX31D0D9D1060142938C2C5CF249DCE2E3">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">CookiesService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f464</UniqueId>
		</Properties>
	</Item>
	<Item class="VRService" referent="RBX166463B8CB06425286C86EEAAC8E5747">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">VRService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f46e</UniqueId>
		</Properties>
	</Item>
	<Item class="ContextActionService" referent="RBX193D7A6F3BF04AA599860923E8707BF4">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">ContextActionService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f470</UniqueId>
		</Properties>
	</Item>
	<Item class="ScriptService" referent="RBXEEB6575E15034D1F81FC8C41B9FCC7BC">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f472</UniqueId>
		</Properties>
	</Item>
	<Item class="AssetService" referent="RBX1487AF294ACF4CB395162242BCBCAE12">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">AssetService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f473</UniqueId>
		</Properties>
	</Item>
	<Item class="TouchInputService" referent="RBX218C5076EC4B4EE78668C987854F3733">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">TouchInputService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f474</UniqueId>
		</Properties>
	</Item>
	<Item class="AnalyticsService" referent="RBX648883FF45924A75A346165AD8708BA6">
		<Properties>
			<string name="ApiKey"></string>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">AnalyticsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f477</UniqueId>
		</Properties>
		<Item class="ModuleScript" referent="RBXFDC9696C6B204FB4AC57C4374C0A2B3A">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">RobloxLSP_Settings</string>
				<string name="ScriptGuid">{50C8024D-9D1B-4B96-B76A-CF05D4DDA29D}</string>
				<ProtectedString name="Source"><![CDATA[return {
	port = 27843,
	startAutomatically = false,
	exclude = {
		-- game:GetService("Workspace")
	}
}]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f4e4</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="Selection" referent="RBX5C87FA053B2B4BBFAF94C0110C891349">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Selection</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f47a</UniqueId>
		</Properties>
	</Item>
	<Item class="ServerScriptService" referent="100">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="LoadStringEnabled">false</bool>
			<string name="Name">ServerScriptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f47b</UniqueId>
		</Properties>
		<Item class="Script" referent="101">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Server</string>
				<string name="ScriptGuid">{EE3A1AA9-6DA8-4BD4-992E-B90CCFDB906A}</string>
				<ProtectedString name="Source"><![CDATA[-- nothing
]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f4e5</UniqueId>
			</Properties>
		</Item>
	</Item>
	<Item class="ServerStorage" referent="RBX869BEE504B194675A24889DBBED34A55">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">ServerStorage</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f47c</UniqueId>
		</Properties>
	</Item>
	<Item class="ReplicatedStorage" referent="3">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">ReplicatedStorage</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f47d</UniqueId>
		</Properties>
		<Item class="ModuleScript" referent="89">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Minesweeper</string>
				<string name="ScriptGuid">{F78B3D23-BD86-42D7-BA94-86519F07F066}</string>
				<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage")

local load = require(ReplicatedStorage.DepLoader)
local Roact: Roact = load("Roact")

local Data = require(script.Data)
local CellController = require(script.CellController)
local Hotbar = require(script.Hotbar)

local App = Roact.Component:extend("App")

function App:init(props)
	self.data = Data.new(props)
end

function App:render()
	return Roact.createElement("Frame", {
		Position = UDim2.new(0.5, 0, 0.5, 0),
		Size = UDim2.new(1, 0, 1, 0),
		AnchorPoint = Vector2.new(0.5, 0.5),
		BackgroundTransparency = 1,
	}, {
		UIListLayout = Roact.createElement("UIListLayout", {
			Padding = UDim.new(0, 0),
			FillDirection = Enum.FillDirection.Vertical,
			HorizontalAlignment = Enum.HorizontalAlignment.Center,
			VerticalAlignment = Enum.VerticalAlignment.Center,
			SortOrder = Enum.SortOrder.LayoutOrder,
		}),

		Cells = Roact.createElement(CellController, {
			data = self.data,
		}),
		Hotbar = Roact.createElement(Hotbar, {
			data = self.data,
		}),
	})
end

return App
]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f542</UniqueId>
			</Properties>
			<Item class="ModuleScript" referent="90">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">CellController</string>
					<string name="ScriptGuid">{FABE4F50-6977-4F87-8D49-7A258739629A}</string>
					<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage")

local load = require(ReplicatedStorage.DepLoader)
local Roact = load("Roact")
local ImageAssets = load("ImageAssets")

local app = script.Parent
local GameLoop = require(app.GameLoop)

local Cell = require(script.Cell)

local gameStateMap = {}

function gameStateMap.starting(self)
	local data = self.props.data

	self.cellChangedConn = data.cellChanged:Connect(function(cell)
		if cell.state:getValue() == "open" then
			self.cellChangedConn:Disconnect()
			GameLoop.start(data, cell)
			if data.cellsLeft == 0 then
				GameLoop.finish(data, nil)
				self:setState({
					game = "victory",
				})
			else
				self:setState({
					game = "playing",
				})
			end
		end
	end)

	return true
end

function gameStateMap.playing(self)
	local data = self.props.data
	self.cellChangedConn = data.cellChanged:Connect(function(cell, state)
		if state == "open" then
			if cell.hasMine then
				self.cellChangedConn:Disconnect()
				self.resetedConn:Disconnect()
				GameLoop.finish(data, cell)
				self:setState({
					game = "defeat",
				})
			elseif data.cellsLeft == 0 then
				self.cellChangedConn:Disconnect()
				self.resetedConn:Disconnect()
				GameLoop.finish(data, nil)
				self:setState({
					game = "victory",
				})
			end
		end
	end)

	self.resetedConn = data.reseted:Connect(function()
		self.cellChangedConn:Disconnect()
		self.resetedConn:Disconnect()
		self:setState({
			game = "starting",
		})
	end)

	return true
end

function gameStateMap.victory(self)
	local data = self.props.data

	self.resetedConn = data.reseted:Connect(function()
		self.resetedConn:Disconnect()
		self:setState({
			game = "starting",
		})
	end)

	return false
end
gameStateMap.defeat = gameStateMap.victory

local CellController = Roact.Component:extend("CellController")

CellController.defaultProps = {
	layoutOrder = 2,
}

function CellController:init()
	self:setState({
		game = "starting",
	})
end

function CellController:render()
	local data = self.props.data

	local size = data.size

	local cellCollection = {}

	for x, y, cell in data.cells do
		local name = string.format("Cell_%02d_%02d", y, x)
		cellCollection[name] = Roact.createElement(Cell, {
			size = size,
			game = self.state.game,
			data = cell,
		})
	end

	local gameStateHandler = gameStateMap[self.state.game]
	if gameStateHandler == nil then
		error(string.format("game state handler not found for %q", self.state.game))
	end

	local shouldConnectInput = gameStateHandler(self)
	local onInputBegan, onInputEnded
	if shouldConnectInput then
		onInputBegan = function(_rbxFrame, input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				data.setFace(ImageAssets.Faces.Tension)
			end
		end

		onInputEnded = function(_rbxFrame, input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				data.setFace(ImageAssets.Faces.Default)
			end
		end
	end

	return Roact.createElement("Frame", {
		Position = UDim2.new(0.5, 0, 0.45, 0),
		Size = UDim2.new(1, 0, 0.9, 0),
		AnchorPoint = Vector2.new(0.5, 0.5),

		LayoutOrder = self.props.layoutOrder,

		BackgroundTransparency = 1,
		ZIndex = 3,

		[Roact.Event.InputBegan] = onInputBegan,
		[Roact.Event.InputEnded] = onInputEnded,
	}, {
		UIAspectRatioConstraint = Roact.createElement("UIAspectRatioConstraint", {
			AspectRatio = size.X / size.Y,
			AspectType = Enum.AspectType.FitWithinMaxSize,
		}),

		UIGridLayout = Roact.createElement("UIGridLayout", {
			StartCorner = Enum.StartCorner.TopLeft,
			SortOrder = Enum.SortOrder.LayoutOrder,
			FillDirection = Enum.FillDirection.Horizontal,
			FillDirectionMaxCells = size.X,

			CellSize = UDim2.new(1 / size.X, 0, 1 / size.Y, 0),
			CellPadding = UDim2.new(0, 0, 0, 0),
		}),

		UIPadding = Roact.createElement("UIPadding", {
			PaddingTop = UDim.new(0.025, 0),
			PaddingBottom = UDim.new(0.025, 0),
			PaddingLeft = UDim.new(0.025, 0),
			PaddingRight = UDim.new(0.025, 0),
		}),

		Cells = Roact.createFragment(cellCollection),
	})
end

return CellController
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f543</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="91">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Cell</string>
						<string name="ScriptGuid">{0A3AE2FF-5F64-422D-ABCE-1A17F31E4AE1}</string>
						<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage")

local load = require(ReplicatedStorage.DepLoader)
local Roact = load("Roact")

local StartingCell = require(script.StartingCell)
local PlayingCell = require(script.PlayingCell)
local VictoryCell = require(script.VictoryCell)
local DefeatCell = require(script.DefeatCell)

local gameStateToCell = {
	starting = StartingCell,
	playing = PlayingCell,
	victory = VictoryCell,
	defeat = DefeatCell
}

local function Cell(props)
	local size = props.size
	local position = props.data.position

	local newProps = {
		layoutOrder = size.X * position.Y + position.X,
	}
	for k, v in props do
		newProps[k] = v
	end

	local derivedCell = gameStateToCell[props.game]
	return Roact.createElement(derivedCell, newProps)
end

return Cell
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f544</UniqueId>
					</Properties>
					<Item class="ModuleScript" referent="93">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">PlayingCell</string>
							<string name="ScriptGuid">{5DBB7EC1-5DFE-48DF-BFDA-37567C9290EF}</string>
							<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage")

local load = require(ReplicatedStorage.DepLoader)
local Roact = load("Roact")
local ImageAssets = load("ImageAssets")

local function PlayingCell(props)
	local function onOpen(_rbxButton)
		props.data:setPressed(false)
		local state = props.data.state:getValue()
		if state == "closed" then
			props.data:setState("open")
			if props.data.surroundingMines == 0 and not props.data.hasMine then
				props.data:openSafeCells()
			end
		elseif state == "open" then
			props.data:chord()
		end
	end

	local function onFlag(_rbxButton)
		local state = props.data.state:getValue()

		if state == "closed" then
			props.data:setState("flagged")
		elseif state == "flagged" then
			props.data:setState("closed")
		elseif state == "open" then
			props.data:flagChord()
		end
	end

	return Roact.createElement("ImageButton", {
		Image = props.data.state:map(function(state)
			if state == "open" then
				if props.data.hasMine then
					return ImageAssets.Cells.RevealedMine
				else
					return ImageAssets.Cells[props.data.surroundingMines]
				end
			elseif state == "flagged" then
				return ImageAssets.Cells.Flagged
			elseif state == "closed" then
				return ImageAssets.Cells.Closed
			else
				return ""
			end
		end),

		PressedImage = props.data.pressed:map(function(pressed)
			local state = props.data.state:getValue()
			if pressed and state == "closed" then
				return ImageAssets.Cells[0]
			else
				return ""
			end
		end),

		LayoutOrder = props.layoutOrder,

		BackgroundTransparency = 1,

		[Roact.Event.MouseButton1Down] = function(_rbxButton)
			props.data:setPressed(true)
		end,

		[Roact.Event.MouseLeave] = function(_rbxButton)
			props.data:setPressed(false)
		end,

		[Roact.Event.MouseButton1Click] = onOpen,
		[Roact.Event.MouseButton2Click] = onFlag,

		[Roact.Event.TouchTap] = onOpen,
		[Roact.Event.TouchLongPress] = onFlag,
	})
end

return PlayingCell
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f546</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="94">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">StartingCell</string>
							<string name="ScriptGuid">{F4338417-EBAD-42F2-871F-9706B575EDC4}</string>
							<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage")

local load = require(ReplicatedStorage.DepLoader)
local Roact = load("Roact")
local ImageAssets = load("ImageAssets")

local function StartingCell(props)
	local function onOpen(_rbxButton)
		props.data:setState("open")
	end

	local function onFlag(_rbxButton)
		local state = props.data.state:getValue()

		if state == "closed" then
			props.data:setState("flagged")
		elseif state == "flagged" then
			props.data:setState("closed")
		end
	end

	return Roact.createElement("ImageButton", {
		Image = props.data.state:map(function(state)
			if state == "flagged" then
				return ImageAssets.Cells.Flagged
			end

			return ImageAssets.Cells.Closed
		end),

		[Roact.Event.MouseButton1Down] = function(_rbxButton)
			local isClosed = props.data.state:getValue() == "closed"
			_rbxButton.PressedImage = if isClosed then ImageAssets.Cells[0] else ""
		end,

		LayoutOrder = props.layoutOrder,

		BackgroundTransparency = 1,

		[Roact.Event.MouseButton1Click] = onOpen,
		[Roact.Event.MouseButton2Click] = onFlag,

		[Roact.Event.TouchTap] = onOpen,
		[Roact.Event.TouchLongPress] = onFlag,
	})
end

return StartingCell
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f547</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXE0D470EEA38C4E9F9A30679612C47B60">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">VictoryCell</string>
							<string name="ScriptGuid">{B5991EE8-3DC3-470A-91B9-8878358A5594}</string>
							<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage")

local load = require(ReplicatedStorage.DepLoader)
local Roact = load("Roact")
local ImageAssets = load("ImageAssets")

local function FinishedCell(props)
	return Roact.createElement("ImageButton", {
		Image = props.data.state:map(function(state)
			if state == "open" then
				if props.data.hasMine then
					return ImageAssets.Cells.RevealedMine
				else
					return ImageAssets.Cells[props.data.surroundingMines]
				end
			elseif state == "flagged" then
				if props.data.hasMine then
					return ImageAssets.Cells.Flagged
				else
					return ImageAssets.Cells.Misflagged
				end
			elseif state == "closed" then
				if props.data.hasMine then
					return ImageAssets.Cells.Flagged
				else
					return ImageAssets.Cells.Closed
				end
			else
				return ""
			end
		end),

		LayoutOrder = props.layoutOrder,

		BackgroundTransparency = 1,
	})
end

return FinishedCell
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec00cd7121</UniqueId>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX5D5EC728ED414B269C286445061B20C3">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">DefeatCell</string>
							<string name="ScriptGuid">{76ACE1EA-EC51-4160-A585-2735E7C11870}</string>
							<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage")

local load = require(ReplicatedStorage.DepLoader)
local Roact = load("Roact")
local ImageAssets = load("ImageAssets")

local function FinishedCell(props)
	return Roact.createElement("ImageButton", {
		Image = props.data.state:map(function(state)
			if state == "mineHit" then
				return ImageAssets.Cells.HitMine
			elseif state == "open" then
				if props.data.hasMine then
					return ImageAssets.Cells.RevealedMine
				else
					return ImageAssets.Cells[props.data.surroundingMines]
				end
			elseif state == "flagged" then
				if props.data.hasMine then
					return ImageAssets.Cells.Flagged
				else
					return ImageAssets.Cells.Misflagged
				end
			elseif state == "closed" then
				if props.data.hasMine then
					return ImageAssets.Cells.RevealedMine
				else
					return ImageAssets.Cells.Closed
				end
			else
				return ""
			end
		end),

		LayoutOrder = props.layoutOrder,

		BackgroundTransparency = 1,
	})
end

return FinishedCell
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec00cd7125</UniqueId>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="95">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Data</string>
					<string name="ScriptGuid">{0300F33F-191B-4567-BC32-20EC283BFFC0}</string>
					<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage")

local load = require(ReplicatedStorage.DepLoader)
local Roact = load("Roact")
local Event = load("Event")
local Space = load("Space")
local ImageAssets = load("ImageAssets")

local DataCell = require(script.DataCell)

local Data = {}
Data.__index = Data

local function onStateChanged(self, cell, newState)
	if newState == "open" then
		self.cellsLeft -= 1
	elseif newState == "flagged" then
		self.setMinesLeft(self.minesLeft:getValue() - 1)
	elseif newState == "closed" then
		self.setMinesLeft(self.minesLeft:getValue() + 1)
	end

	self.cellChanged:Fire(cell, newState)
end

function Data.new(props)
	local self = {
		size = props.size,
		mineCount = props.mineCount,
	}

	self.cellsLeft = self.size.X * self.size.Y - self.mineCount
	self.minesLeft, self.setMinesLeft = Roact.createBinding(self.mineCount)
	self.time, self.setTime = Roact.createBinding(0)
	self.face, self.setFace = Roact.createBinding(ImageAssets.Faces.Default)

	self.cellChanged = Event.new()
	self.reseted = Event.new()

	local cells = Space.new()
	self.cells = cells
	for x = 1, self.size.X do
		for y = 1, self.size.Y do
			local cell = DataCell.new(self, x, y)
			cells:Set(x, y, cell)
			cell.changed:Connect(function(newState)
				onStateChanged(self, cell, newState)
			end)
		end
	end

	setmetatable(self, Data)

	return self
end

return Data
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f548</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="96">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">DataCell</string>
						<string name="ScriptGuid">{528AABA8-479A-4396-8309-8D3BE6BBF3CD}</string>
						<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage")

local load = require(ReplicatedStorage.DepLoader)
local Event = load("Event")
local Roact = load("Roact")

local offsets = {
	Vector2.new(1, 1),
	Vector2.new(1, 0),
	Vector2.new(1, -1),
	Vector2.new(0, -1),
	Vector2.new(-1, -1),
	Vector2.new(-1, 0),
	Vector2.new(-1, 1),
	Vector2.new(0, 1),
}

local function countNeighborsWithState(self, state)
	local stateCount = 0

	for _, neighbor in self:getNeighbors() do
		if neighbor.state:getValue() == state then
			stateCount += 1
		end
	end

	return stateCount
end

local DataCell = {}
DataCell.__index = DataCell

function DataCell.new(data, x, y)
	local self = {
		data = data,
		cells = data.cells,
		hasMine = false,
		surroundingMines = 0,
		position = Vector2.new(x, y),
		changed = Event.new(),
	}

	self.state, self.setRawState = Roact.createBinding("closed")
	self.pressed, self.setRawPressed = Roact.createBinding(false)

	setmetatable(self, DataCell)

	return self
end

function DataCell:setState(newState)
	self.setRawState(newState)
	self.changed:Fire(newState)
end

function DataCell:setPressed(isPressed)
	self.setRawPressed(isPressed)
end

function DataCell:openSafeCells()
	local closedCells = {}
	local openCells = {}

	local currentCell = self
	while currentCell ~= nil do
		closedCells[currentCell] = true
		openCells[currentCell] = nil

		for _, neighbor in currentCell:getNeighbors() do
			if closedCells[neighbor] or neighbor.state:getValue() == "open" then
				continue
			end

			neighbor:setState("open")

			if neighbor.surroundingMines == 0 then
				openCells[neighbor] = true
			end
		end

		currentCell = next(openCells)
	end
end

function DataCell:chord()
	local surroundingFlags = countNeighborsWithState(self, "flagged")

	if self.surroundingMines > surroundingFlags then
		return
	end

	local hitMine = false
	for _, neighbor in self:getNeighbors() do
		if neighbor.state:getValue() == "closed" then
			neighbor:setState("open")
			if neighbor.hasMine then
				hitMine = true
			end
		end
	end

	if not hitMine then
		for _, neighbor in self:getNeighbors() do
			if neighbor.surroundingMines == 0 then
				neighbor:openSafeCells()
			end
		end
	end
end

function DataCell:flagChord()
	local flaggedNeighborCount = countNeighborsWithState(self, "flagged")
	local closedNeighborCount = countNeighborsWithState(self, "closed")

	if self.surroundingMines ~= flaggedNeighborCount + closedNeighborCount then
		return
	end

	for _, neighbor in self:getNeighbors() do
		if neighbor.state:getValue() == "closed" then
			neighbor:setState("flagged")
		end
	end
end

function DataCell:getNeighbors()
	local neighbors = {}
	for _, offset in offsets do
		local newPosition = self.position + offset

		local cell = self.cells:Get(newPosition.X, newPosition.Y)
		if not cell then
			continue
		end

		table.insert(neighbors, cell)
	end

	return neighbors
end

return DataCell
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f549</UniqueId>
					</Properties>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="97">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">GameLoop</string>
					<string name="ScriptGuid">{89D6BD29-F173-49A7-8C31-918165D2F840}</string>
					<ProtectedString name="Source"><![CDATA[local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local load = require(ReplicatedStorage.DepLoader)
local Space = load("Space")
local ImageAssets = load("ImageAssets")

local R = Random.new()

local GameLoop = {}

function GameLoop.start(data, startingCell)
	assert(data.timerConn == nil, "game has already started!")

	local i = 0
	data.timerConn = RunService.Heartbeat:Connect(function(dt)
		i += dt
		if i >= 1 then
			data.setTime(data.time:getValue() + 1)
			i -= 1
		end
	end)

	local size = data.size
	local openCellSet = Space.new()

	openCellSet:Set(startingCell.position.X, startingCell.position.Y, true)
	for _, neighbor in startingCell:getNeighbors() do
		local newPosition = neighbor.position
		openCellSet:Set(newPosition.X, newPosition.Y, true)
	end

	for _i = 1, data.mineCount do
		local x, y
		repeat
			x = R:NextInteger(1, size.X)
			y = R:NextInteger(1, size.Y)
		until not openCellSet:Get(x, y)
		local cell = data.cells:Get(x, y)
		cell.hasMine = true

		for _, neighbor in cell:getNeighbors() do
			neighbor.surroundingMines += 1
		end

		openCellSet:Set(x, y, true)
	end

	data.sideEffects = true
	startingCell:openSafeCells()
end

function GameLoop.finish(data, finalCell)
	assert(data.timerConn, "game is not started yet!")
	data.timerConn:Disconnect()
	data.timerConn = nil

	data.sideEffects = false

	if finalCell then
		finalCell:setState("mineHit")
		data.setFace(ImageAssets.Faces.Lost)
	else
		data.setFace(ImageAssets.Faces.Won)
		data.setMinesLeft(0)
	end
end

function GameLoop.reset(data)
	for _, _, cell in data.cells do
		cell.hasMine = false
		cell.surroundingMines = 0
		cell:setState("closed")
	end

	if data.timerConn then
		data.timerConn:Disconnect()
		data.timerConn = nil
	end

	data.sideEffects = false
	data.setTime(0)
	data.setMinesLeft(data.mineCount)
	data.cellsLeft = data.size.X * data.size.Y - data.mineCount
	data.setFace(ImageAssets.Faces.Default)
	data.reseted:Fire()
end

return GameLoop
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f54a</UniqueId>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="98">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Hotbar</string>
					<string name="ScriptGuid">{E44BC5A0-24CE-4291-A50C-070EB80CA397}</string>
					<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage")

local load = require(ReplicatedStorage.DepLoader)
local Roact = load("Roact")
local ImageAssets = load("ImageAssets")

local app = script.Parent
local GameLoop = require(app.GameLoop)

local NumberLabel = require(script.NumberLabel)

local NUM_DIGITS = 3

local Hotbar = Roact.Component:extend("Hotbar")

Hotbar.defaultProps = {
	layoutOrder = 1,
}

function Hotbar:render()
	local data = self.props.data

	return Roact.createElement("Frame", {
		Size = UDim2.new(1, 0, 0.1, 0),
		Position = UDim2.new(0.5, 0, 1, 0),
		AnchorPoint = Vector2.new(0.5, 1),

		BackgroundTransparency = 1,

		LayoutOrder = self.props.layoutOrder,
	}, {
		UIListLayout = Roact.createElement("UIListLayout", {
			Padding = UDim.new(0.05, 0),
			FillDirection = Enum.FillDirection.Horizontal,
			HorizontalAlignment = Enum.HorizontalAlignment.Center,
			VerticalAlignment = Enum.VerticalAlignment.Center,
			SortOrder = Enum.SortOrder.LayoutOrder,
		}),

		MinesLeft = Roact.createElement("Frame", {
			Size = UDim2.new(0.3, 0, 0.8, 0),
			LayoutOrder = 1,
			BackgroundTransparency = 1,
		}, {
			UIAspectRatioConstraint = Roact.createElement("UIAspectRatioConstraint", {
				AspectRatio = NUM_DIGITS * 13 / 23,
			}),
			Label = Roact.createElement(NumberLabel, {
				value = data.minesLeft,
				numDigits = NUM_DIGITS,
			}),
		}),

		Face = Roact.createElement("ImageButton", {
			Size = UDim2.new(0.3, 0, 0.8, 0),
			LayoutOrder = 2,

			Image = data.face,
			PressedImage = ImageAssets.Faces.Pressed,

			BackgroundTransparency = 1,

			[Roact.Event.MouseButton1Click] = function(_rbxButton)
				GameLoop.reset(data)
			end,
		}, {
			UIAspectRatioConstraint = Roact.createElement("UIAspectRatioConstraint", {
				AspectRatio = 1,
				AspectType = Enum.AspectType.FitWithinMaxSize,
			}),
		}),

		Time = Roact.createElement("Frame", {
			Size = UDim2.new(0.3, 0, 0.8, 0),
			LayoutOrder = 3,
			BackgroundTransparency = 1,
		}, {
			UIAspectRatioConstraint = Roact.createElement("UIAspectRatioConstraint", {
				AspectRatio = NUM_DIGITS * 13 / 23,
			}),
			Label = Roact.createElement(NumberLabel, {
				value = data.time,
				numDigits = NUM_DIGITS,
			}),
		}),
	})
end

return Hotbar
]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f54b</UniqueId>
				</Properties>
				<Item class="ModuleScript" referent="99">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">NumberLabel</string>
						<string name="ScriptGuid">{2F0C4165-9223-45AF-BE87-B26A039D3B97}</string>
						<ProtectedString name="Source"><![CDATA[local ReplicatedStorage = game:GetService("ReplicatedStorage")

local load = require(ReplicatedStorage.DepLoader)
local Roact = load("Roact")
local ImageAssets = load("ImageAssets")

local function NumberLabel(props)
	local labels = {}

	labels.UIGridLayout = Roact.createElement("UIGridLayout", {
		CellSize = UDim2.new(1 / props.numDigits, 0, 1, 0),
		CellPadding = UDim2.new(0, 0, 0, 0),
		FillDirection = Enum.FillDirection.Horizontal,
		SortOrder = Enum.SortOrder.LayoutOrder,
		HorizontalAlignment = Enum.HorizontalAlignment.Center,
		VerticalAlignment = Enum.VerticalAlignment.Center,
	})

	for i = 1, props.numDigits do
		local name = string.format("Digit1%s", string.rep("0", i - 1))
		labels[name] = Roact.createElement("ImageButton", {
			BackgroundTransparency = 1,
			LayoutOrder = -i,
			Image = props.value:map(function(number)
				local digit = math.floor(number / 10 ^ (i - 1)) % 10
				return ImageAssets.Numbers[digit]
			end),
		})
	end

	return Roact.createFragment(labels)
end

return NumberLabel
]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f54c</UniqueId>
					</Properties>
				</Item>
			</Item>
		</Item>
	</Item>
	<Item class="LuaWebService" referent="RBX19B96286F94248678E9FCFC4E1F0CED9">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f484</UniqueId>
		</Properties>
	</Item>
	<Item class="ProcessInstancePhysicsService" referent="RBX5F312135D21B4BB080A046815675CA7D">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">ProcessInstancePhysicsService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f485</UniqueId>
		</Properties>
	</Item>
	<Item class="Lighting" referent="1">
		<Properties>
			<Color3 name="Ambient">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<float name="Brightness">2</float>
			<Color3 name="ColorShift_Bottom">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<Color3 name="ColorShift_Top">
				<R>0</R>
				<G>0</G>
				<B>0</B>
			</Color3>
			<float name="EnvironmentDiffuseScale">0</float>
			<float name="EnvironmentSpecularScale">0</float>
			<float name="ExposureCompensation">0</float>
			<Color3 name="FogColor">
				<R>0.75</R>
				<G>0.75</G>
				<B>0.75</B>
			</Color3>
			<float name="FogEnd">100000</float>
			<float name="FogStart">0</float>
			<float name="GeographicLatitude">41.7332993</float>
			<bool name="GlobalShadows">true</bool>
			<string name="Name">Lighting</string>
			<Color3 name="OutdoorAmbient">
				<R>0.5</R>
				<G>0.5</G>
				<B>0.5</B>
			</Color3>
			<bool name="Outlines">false</bool>
			<float name="ShadowSoftness">0.5</float>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<token name="Technology">1</token>
			<string name="TimeOfDay">14:00:00</string>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f4ab</UniqueId>
		</Properties>
	</Item>
	<Item class="LodDataService" referent="RBX6191734BA01C443C82C66E8A7D4FEECA">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Instance</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f4ae</UniqueId>
		</Properties>
	</Item>
	<Item class="HttpService" referent="0">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="HttpEnabled">true</bool>
			<string name="Name">HttpService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f54d</UniqueId>
		</Properties>
	</Item>
	<Item class="LanguageService" referent="RBX04A03F4FF365453D878A2E60DE60AE2F">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">LanguageService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f54e</UniqueId>
		</Properties>
	</Item>
	<Item class="TestService" referent="RBX844479402D4746828714783D6FF8789C">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="AutoRuns">true</bool>
			<string name="Description"></string>
			<bool name="ExecuteWithStudioRun">false</bool>
			<bool name="Is30FpsThrottleEnabled">true</bool>
			<bool name="IsPhysicsEnvironmentalThrottled">true</bool>
			<bool name="IsSleepAllowed">true</bool>
			<string name="Name">TestService</string>
			<int name="NumberOfPlayers">0</int>
			<double name="SimulateSecondsLag">0</double>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<double name="Timeout">10</double>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0001f54f</UniqueId>
		</Properties>
	</Item>
	<Item class="Teams" referent="RBX1A5CC54B710B48CDBEB0D521793CED61">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<string name="Name">Teams</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0002af33</UniqueId>
		</Properties>
	</Item>
	<Item class="ProximityPromptService" referent="RBXD538D1F7245245F39E9448411CBCFF59">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="Enabled">true</bool>
			<int name="MaxPromptsVisible">16</int>
			<string name="Name">ProximityPromptService</string>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
			<UniqueId name="UniqueId">47cb1509b0eb4d2c02d679ec0002b1cb</UniqueId>
		</Properties>
	</Item>
	<SharedStrings>
		<SharedString md5="yuZpQdnvvUBOTYh1jqZ2cA=="></SharedString>
	</SharedStrings>
</roblox>